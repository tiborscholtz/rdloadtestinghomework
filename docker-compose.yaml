version: '1.5'
services:
  goserver1:
    container_name: goserver1
    build:
      context: ./api
    environment:
      - DATABASE_HOST
      - DATABASE_USERNAME
      - DATABASE_PASSWORD
      - DATABASE_NAME
      - DATABASE_PORT
      - SERVERTITLE=server1
    expose:
      - "5000"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1GB'
  goserver2:
    container_name: goserver2
    build:
      context: ./api
    environment:
      - DATABASE_HOST
      - DATABASE_USERNAME
      - DATABASE_PASSWORD
      - DATABASE_NAME
      - DATABASE_PORT
      - SERVERTITLE=server2
    expose:
      - "5000"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1GB'
  nginx:
    build:
      context: ./nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - goserver1
      - goserver2
      - postgres
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1GB'
  postgres:
    image: postgres
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=DATABASE_USERNAME
      - POSTGRES_PASSWORD=DATABASE_PASSWORD
      - POSTGRES_DB=DATABASE_NAME
    volumes:
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./sql/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '5GB'